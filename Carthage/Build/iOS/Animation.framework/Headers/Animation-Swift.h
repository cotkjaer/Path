// Generated by Apple Swift version 3.0.2 (swiftlang-800.0.63 clang-800.0.42.1)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if defined(__has_attribute) && __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if defined(__has_feature) && __has_feature(modules)
@import UIKit;
@import CoreGraphics;
@import QuartzCore;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class NSCoder;

SWIFT_CLASS("_TtC9Animation13IndicatorView")
@interface IndicatorView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)awakeFromNib;
- (void)prepareForInterfaceBuilder;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (void)tintColorDidChange;
- (void)layoutSubviews;
@end


SWIFT_CLASS("_TtC9Animation21ActivityIndicatorView")
@interface ActivityIndicatorView : IndicatorView
- (void)startAnimating;
- (void)stopAnimating;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class CAAnimation;

@interface CALayer (SWIFT_EXTENSION(Animation))
- (void)addWithAnimation:(CAAnimation * _Nonnull)animation forKey:(NSString * _Nullable)forKey completionHandler:(void (^ _Nonnull)(BOOL))completionHandler;
@end


@interface CALayer (SWIFT_EXTENSION(Animation))
- (void)shake:(double)duration;
@end


@interface CALayer (SWIFT_EXTENSION(Animation))
@end


@interface CALayer (SWIFT_EXTENSION(Animation))
- (void)animateWithKeyPath:(NSString * _Nonnull)keyPath to:(CGFloat)value duration:(double)duration;
- (void)animateWithDuration:(double)duration keyPath:(NSString * _Nonnull)keyPath to:(id _Nonnull)value;
- (void)animate:(id _Nonnull)value duration:(double)duration keyPath:(NSString * _Nonnull)keyPath;
@end


@interface CALayer (SWIFT_EXTENSION(Animation))
@property (nonatomic) CGFloat rotation;
- (void)rotateTo:(CGFloat)radians clockwise:(BOOL)clockwise duration:(double)duration timingFunctionName:(NSString * _Nonnull)timingFunctionName completion:(void (^ _Nonnull)(BOOL))completion;
- (void)rotateBy:(CGFloat)deltaAngle duration:(double)duration timingFunctionName:(NSString * _Nonnull)timingFunctionName completion:(void (^ _Nonnull)(BOOL))completion;
/**
  begin rotating around anchor point at a given velocity (revolutions pr second) and direction (clock or anticlockwise)
*/
- (void)beginRotatingWithClockwise:(BOOL)clockwise speed:(double)speed;
- (void)stopRotating;
@end


@interface CAShapeLayer (SWIFT_EXTENSION(Animation))
- (void)animateWithLineWidthTo:(CGFloat)width duration:(double)duration;
- (void)animateWithStrokeEndTo:(CGFloat)strokeEnd duration:(double)duration;
- (void)animateWithStrokeStartTo:(CGFloat)strokeStart duration:(double)duration;
- (void)animateWithPathTo:(CGPathRef _Nonnull)path duration:(double)duration;
@end



SWIFT_CLASS("_TtC9Animation11LiquidLayer")
@interface LiquidLayer : CALayer
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLayer:(id _Nonnull)layer SWIFT_UNAVAILABLE;
@end

@class UIColor;

SWIFT_CLASS("_TtC9Animation10LiquidView")
@interface LiquidView : UIView
@property (nonatomic, strong) UIColor * _Nonnull liquidColor;
@property (nonatomic, strong) UIColor * _Nonnull borderColor;
@property (nonatomic) CGFloat progress;
@property (nonatomic) BOOL leftStartsUp;
@property (nonatomic) double velocity;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)awakeFromNib;
- (void)prepareForInterfaceBuilder;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (void)tintColorDidChange;
/**
  begin undulating at a given velocity (reverseals pr second)
*/
- (void)beginUndulatingWithSpeed:(double)speed;
- (void)stopUndulating;
- (void)layoutSubviews;
@end


@interface LiquidView (SWIFT_EXTENSION(Animation)) <CAAnimationDelegate>
- (void)animationDidStart:(CAAnimation * _Nonnull)anim;
- (void)animationDidStop:(CAAnimation * _Nonnull)anim finished:(BOOL)flag;
@end

@class UIBezierPath;

SWIFT_CLASS("_TtC9Animation13LiveShapeView")
@interface LiveShapeView : UIView
@property (nonatomic, strong) UIBezierPath * _Nonnull path;
@property (nonatomic, strong) UIColor * _Nullable fillColor;
@property (nonatomic, strong) UIColor * _Nullable strokeColor;
@property (nonatomic) CGFloat strokeWidth;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)awakeFromNib;
- (void)prepareForInterfaceBuilder;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (void)tintColorDidChange;
- (void)layoutSubviews;
/**
  Override to update this shape
*/
- (void)update;
@property (nonatomic, readonly) double elapsed;
@property (nonatomic, readonly) BOOL isAnimating;
- (void)startUpdateLoop;
- (void)stopUpdateLoop;
@end


SWIFT_CLASS("_TtC9Animation20OverlappingWavesView")
@interface OverlappingWavesView : LiveShapeView
- (void)didMoveToSuperview;
- (void)setup;
- (void)update;
- (void)layoutSubviews;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9Animation21ProgressIndicatorView")
@interface ProgressIndicatorView : IndicatorView
@property (nonatomic, readonly) CGSize intrinsicContentSize;
/**
  Progress should be in [0;1]
*/
@property (nonatomic) CGFloat progress;
- (void)tintColorDidChange;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9Animation14SingleWaveView")
@interface SingleWaveView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)awakeFromNib;
- (void)prepareForInterfaceBuilder;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
@end


@interface UIView (SWIFT_EXTENSION(Animation))
- (void)shake;
@end


@interface UIView (SWIFT_EXTENSION(Animation))
@end


SWIFT_CLASS("_TtC9Animation8WaveView")
@interface WaveView : LiveShapeView
- (void)didMoveToSuperview;
- (void)setup;
- (void)update;
- (void)layoutSubviews;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

#pragma clang diagnostic pop
